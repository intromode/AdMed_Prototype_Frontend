{"version":3,"sources":["../src/index.js"],"names":["isPromise","payload","Promise","resolve","PENDING","FULFILLED","REJECTED","createAction","type","promiseFn","pendingType","fulfilledType","rejectedType","promiseMiddleware","dispatch","next","action","then","catch","err"],"mappings":";;;;;;;AAAO,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAAAC,OAAO,EAAI;AAClC,SAAOC,OAAO,CAACC,OAAR,CAAgBF,OAAhB,MAA6BA,OAApC;AACD,CAFM;;;AAIA,IAAMG,OAAO,GAAG,SAAhB;;AACA,IAAMC,SAAS,GAAG,WAAlB;;AACA,IAAMC,QAAQ,GAAG,UAAjB;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAOC,SAAP,EAAqB;AAC/C,MAAMC,WAAW,aAAMF,IAAN,cAAcJ,OAAd,CAAjB;AACA,MAAMO,aAAa,aAAMH,IAAN,cAAcH,SAAd,CAAnB;AACA,MAAMO,YAAY,aAAMJ,IAAN,cAAcF,QAAd,CAAlB;AAEA,SAAO,CACL;AAAA,WAAc;AACZE,MAAAA,IAAI,EAAJA,IADY;AAEZP,MAAAA,OAAO,EAAEQ,SAAS,MAAT,mBAFG;AAGZC,MAAAA,WAAW,EAAXA,WAHY;AAIZC,MAAAA,aAAa,EAAbA,aAJY;AAKZC,MAAAA,YAAY,EAAZA;AALY,KAAd;AAAA,GADK,EAQLJ,IARK,EASLE,WATK,EAULC,aAVK,EAWLC,YAXK,CAAP;AAaD,CAlBM;;;;AAoBA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,SAAkB,UAAAC,IAAI;AAAA,WAAI,UAAAC,MAAM,EAAI;AAAA,UAEjER,IAFiE,GAM/DQ,MAN+D,CAEjER,IAFiE;AAAA,gCAM/DQ,MAN+D,CAGjEN,WAHiE;AAAA,UAGjEA,WAHiE,oCAGnDN,OAHmD;AAAA,kCAM/DY,MAN+D,CAIjEL,aAJiE;AAAA,UAIjEA,aAJiE,sCAIjDN,SAJiD;AAAA,iCAM/DW,MAN+D,CAKjEJ,YALiE;AAAA,UAKjEA,YALiE,qCAKlDN,QALkD;;AAQnE,UAAI,CAACN,SAAS,CAACgB,MAAM,CAACf,OAAR,CAAd,EAAgC;AAC9B,eAAOc,IAAI,CAACC,MAAD,CAAX;AACD;;AAEDF,MAAAA,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAEE;AAAR,OAAD,CAAR;AAEAM,MAAAA,MAAM,CAACf,OAAP,CAAegB,IAAf,CAAoB,UAAAhB,OAAO,EAAI;AAC7Ba,QAAAA,QAAQ,CAAC;AACPN,UAAAA,IAAI,EAAJA,IADO;AAEPP,UAAAA,OAAO,EAAPA;AAFO,SAAD,CAAR;AAKAa,QAAAA,QAAQ,CAAC;AAAEN,UAAAA,IAAI,EAAEG;AAAR,SAAD,CAAR;AACD,OAPD,EAQGO,KARH,CAQS,UAAAC,GAAG,EAAI;AACZL,QAAAA,QAAQ,CAAC;AACPN,UAAAA,IAAI,EAAEI,YADC;AAEPX,UAAAA,OAAO,EAAEkB;AAFF,SAAD,CAAR;AAID,OAbH;AAcD,KA5BsD;AAAA,GAAtB;AAAA,CAA1B","sourcesContent":["export const isPromise = payload => {\n  return Promise.resolve(payload) === payload;\n};\n\nexport const PENDING = 'PENDING';\nexport const FULFILLED = 'FULFILLED';\nexport const REJECTED = 'REJECTED';\n\nexport const createAction = (type, promiseFn) => {\n  const pendingType = `${type}_${PENDING}`;\n  const fulfilledType = `${type}_${FULFILLED}`;\n  const rejectedType = `${type}_${REJECTED}`;\n\n  return [\n    (...args) => ({\n      type,\n      payload: promiseFn(...args),\n      pendingType,\n      fulfilledType,\n      rejectedType\n    }),\n    type,\n    pendingType,\n    fulfilledType,\n    rejectedType\n  ]\n};\n\nexport const promiseMiddleware = ({ dispatch }) => next => action => {\n  const {\n    type,\n    pendingType = PENDING,\n    fulfilledType = FULFILLED,\n    rejectedType = REJECTED\n  } = action;\n\n  if (!isPromise(action.payload)) {\n    return next(action);\n  }\n\n  dispatch({ type: pendingType });\n\n  action.payload.then(payload => {\n    dispatch({\n      type,\n      payload\n    });\n\n    dispatch({ type: fulfilledType });\n  })\n    .catch(err => {\n      dispatch({\n        type: rejectedType,\n        payload: err\n      });\n    });\n};\n"],"file":"index.js"}